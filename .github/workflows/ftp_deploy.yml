name: Deploy via SFTP (DEBUG MODE)

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: poulin

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true  # Se usi submodules, altrimenti rimuovilo

      - name: Debug completo (directory locali, FTP e variabili)
        run: |

          echo ""
          echo "üîç **Step 1: Installazione e build del progetto**"
          npm install --prefix daily-milk/frontend
          npm run build --prefix daily-milk/frontend

          echo ""
          echo "üîç **Step 3: Verifica directory build locale**"
          if [ -d "daily-milk/frontend/build" ] && [ "$(ls -A daily-milk/frontend/build)" ]; then
            echo "‚úÖ La cartella daily-milk/frontend/build esiste ed √® popolata."
          else
            echo "‚ùå ERRORE: La cartella daily-milk/frontend/build NON esiste o √® vuota!"
            exit 1
          fi

          echo ""
          echo "üîç **Step 7: Test connessione FTP**"
          if sshpass -p "${{ secrets.FTP_PASSWORD }}" ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null \
            "${{ secrets.FTP_USERNAME }}@${{ secrets.FTP_HOST }}" "echo '‚úÖ Connessione FTP riuscita'"; then
            echo "‚úÖ Connessione stabilita con successo."
          else
            echo "‚ùå ERRORE: Impossibile connettersi al server FTP!"
            exit 1
          fi

          echo ""
          echo "üîç **Step 8: Controllo contenuto della cartella remota /ai/**"
          sshpass -p "${{ secrets.FTP_PASSWORD }}" ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null \
            "${{ secrets.FTP_USERNAME }}@${{ secrets.FTP_HOST }}" "ls -la /ai/" || echo "‚ö†Ô∏è Errore nel visualizzare il contenuto di /ai"

          echo ""
          echo "üîç **Step 9: Controllo file myftp.txt su FTP con grep**"
          if sshpass -p "${{ secrets.FTP_PASSWORD }}" ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null \
            "${{ secrets.FTP_USERNAME }}@${{ secrets.FTP_HOST }}" "ls -la /ai/ | grep myftp.txt"; then
            echo "‚úÖ File myftp.txt trovato su FTP. Procedo con l'upload."
          else
            echo "‚ùå File myftp.txt NON trovato su FTP. Procedo comunque con il deploy per debug."
          fi

      - name: Upload files via SFTP
        run: |
          echo ""
          echo "üöÄ **Step 10: Upload dei file su SFTP**"
          sshpass -p "${{ secrets.FTP_PASSWORD }}" sftp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null \
            "${{ secrets.FTP_USERNAME }}@${{ secrets.FTP_HOST }}" <<EOF
            put -r daily-milk/frontend/build/* /ai/
          EOF
          echo "‚úÖ Upload completato."
        env:
          SSHPASS: ${{ secrets.FTP_PASSWORD }}
